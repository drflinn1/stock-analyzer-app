name: Daily Rebalance (headless)

on:
  schedule:
    - cron: "0 10 * * 1-5"   # Runs at 10:00 UTC (Mon-Fri)
  workflow_dispatch:          # Allows manual runs from the Actions tab

jobs:
  rebalance:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Market hours guard (ET)
        run: |
          python - <<'EOF'
          import datetime, pytz, sys
          eastern = pytz.timezone("US/Eastern")
          now = datetime.datetime.now(eastern)
          if now.weekday() >= 5 or now.hour < 9 or now.hour >= 16:
              print("⏸️ Market closed, skipping rebalance.")
              sys.exit(0)
          EOF

      - name: Execute headless rebalance
        run: python run.py --headless

      - name: Upload signals artifact
        uses: actions/upload-artifact@v4
        with:
          name: signals
          path: signals_*.csv

      - name: Build run summary
        run: |
          echo "Daily Rebalance - success" >> $GITHUB_STEP_SUMMARY
          echo "Preview signals artifact:" >> $GITHUB_STEP_SUMMARY
          ls -lh signals_*.csv | tee -a $GITHUB_STEP_SUMMARY
          head -n 20 signals_*.csv | tee -a $GITHUB_STEP_SUMMARY

      - name: Notify by email
        run: |
          python - <<'EOF'
          import os, smtplib, ssl

          sender = os.environ.get("EMAIL_SENDER")
          receiver = os.environ.get("EMAIL_RECEIVER")
          password = os.environ.get("EMAIL_PASSWORD")

          subject = "Stock Analyzer Daily Report"
          body = "✅ The daily rebalance job has completed.\n\nCheck GitHub Actions artifacts for results."

          message = f"Subject: {subject}\n\n{body}"

          if not all([sender, receiver, password]):
              raise ValueError("❌ Missing one or more email environment variables")

          context = ssl.create_default_context()
          with smtplib.SMTP_SSL("smtp.gmail.com", 465, context=context) as server:
              server.login(sender, password)
              server.sendmail(sender, receiver, message)

          print("✅ Email sent successfully")
          EOF
        env:
          EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
          EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
