name: Daily Rebalance

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Do not make external changes (safe test mode)"
        required: false
        default: "true"
      ignore_market_hours:
        description: "Run even if outside US market hours (for testing)"
        required: false
        default: "false"

  schedule:
    # 3:55 PM during EDT (UTC-4)
    - cron: "55 19 * * 1-5"
    # 3:55 PM during EST (UTC-5)
    - cron: "55 20 * * 1-5"

concurrency:
  group: rebalance
  cancel-in-progress: false

jobs:
  rebalance:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Decide dry-run
        id: flags
        shell: bash
        run: |
          # Default to true for workflow_dispatch when unset
          DRY_RUN_INPUT="${{ github.event.inputs.dry_run }}"
          if [ -z "$DRY_RUN_INPUT" ]; then DRY_RUN_INPUT="true"; fi
          echo "dry_run=$DRY_RUN_INPUT" >> "$GITHUB_OUTPUT"
          echo "DRY_RUN=$DRY_RUN_INPUT"

      - name: Run rebalance script
        env:
          DRY_RUN: ${{ steps.flags.outputs.dry_run }}
        run: |
          echo "Running rebalance..."
          # call the existing runner.py in the repo root
          if [ "${DRY_RUN}" = "true" ]; then
            python runner.py --headless --dry-run || exit 2
          else
            python runner.py --headless || exit 2
          fi

      - name: Upload signals artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: signals-${{ github.run_id }}
          path: |
            signals-*.csv
          if-no-files-found: warn

      - name: Build run summary
        if: always()
        run: |
          echo "### Daily Rebalance â€” $GITHUB_RUN_NUMBER" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if ls signals-*.csv >/dev/null 2>&1; then
            echo "Produced signals CSV files:" >> $GITHUB_STEP_SUMMARY
            ls -1 signals-*.csv | sed 's/^/- `&`/' >> $GITHUB_STEP_SUMMARY
          else
            echo "_No signals file found._" >> $GITHUB_STEP_SUMMARY
          fi
