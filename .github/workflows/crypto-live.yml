name: Crypto Live - every 15m

on:
  workflow_dispatch:
  schedule:
    # runs every 15 minutes (UTC)
    - cron: "*/15 * * * *"

permissions:
  contents: read

concurrency:
  group: crypto-live-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run:
    name: Run Crypto Bot
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ccxt pandas numpy python-dateutil pytz requests

      # Runs the root entry point (python main.py), which you said maps to stock-analyzer-app/main.py
      - name: Run trader
        env:
          DRY_RUN: ${{ vars.DRY_RUN || 'true' }}   # keep 'true' for paper/sim
          EXCHANGE_ID: ${{ vars.EXCHANGE_ID || 'kraken' }}
          CCXT_API_KEY: ${{ secrets.CCXT_API_KEY }}
          CCXT_API_SECRET: ${{ secrets.CCXT_API_SECRET }}
          CCXT_API_PASSWORD: ${{ secrets.CCXT_API_PASSWORD }}
          LOG_LEVEL: INFO
        run: |
          python main.py

      # Optional: show the last KPI line for quick confirmation
      - name: KPI tail (last line)
        if: always()
        run: |
          echo "---- KPI SUMMARY (tail of kpi_history.csv) ----"
          tail -n 1 .state/kpi_history.csv || true

      # Debug listing of everything in .state so you can see files each run
      - name: Debug .state contents
        if: always()
        run: |
          echo "ls -la .state"
          ls -la .state || true
          echo "tree -a .state"
          sudo apt-get update >/dev/null 2>&1 || true
          sudo apt-get install -y tree >/dev/null 2>&1 || true
          tree -a .state || true
          echo "----- day_state.json -----"
          cat .state/day_state.json || true

      # IMPORTANT: upload the .state folder as an artifact with explicit globs
      - name: Save state (upload .state)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: state-${{ github.run_id }}
          path: |
            .state/**
            .state/*
            .state
          if-no-files-found: warn
          retention-days: 7
