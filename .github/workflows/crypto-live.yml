name: Crypto Live (Every 15 min)

on:
  workflow_dispatch:
    inputs:
      DRY_RUN:
        description: "Dry run (no real orders)?"
        required: true
        default: "true"
  schedule:
    - cron: "*/15 * * * *"

permissions:
  contents: read

concurrency:
  group: crypto-live
  cancel-in-progress: false

env:
  MARKET: "CRYPTO"
  PYTHONUNBUFFERED: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

  # === TUNABLES (safe defaults) ===
  PER_TRADE_USD: "10"
  DAILY_CAP_USD: "25"
  LOW_BALANCE_USD: "5"
  DROP_PCT: "2.0"
  EXCHANGE: "kraken"
  MODE: "live"

  # --- NEW: Tax reserve knobs ---
  TAX_RESERVE_RATE: "0.30"
  STATE_TAX_RATE:  "0.00"

  # Sells
  TAKE_PROFIT_PCT: "2.0"
  TRAILING_ACTIVATE_PCT: "1.0"
  TRAILING_DELTA_PCT: "1.0"
  STOP_LOSS_PCT: "0"

  # Position rails
  MAX_POSITIONS: "50"
  PER_ASSET_CAP_USD: "50"
  COOLDOWN_MINUTES: "30"
  AUTO_UNIVERSE_COUNT: "500"

jobs:
  live:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # -------- Persistent state & tax ledger (restore) --------
      - name: Restore .state cache
        id: state-restore
        uses: actions/cache/restore@v4
        with:
          path: .state
          key: state-${{ github.ref_name }}-v1

      - name: Restore tax ledger
        id: tax-restore
        uses: actions/cache/restore@v4
        with:
          path: data
          key: tax-${{ github.ref_name }}-v1

      # -------- Adopt manual DRY_RUN input (optional) --------
      - name: Adopt DRY_RUN input
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "DRY_RUN=${{ github.event.inputs.DRY_RUN }}" >> $GITHUB_ENV

      # -------- Low-balance notice (soft gate only) --------
      - name: MARK
        run: echo "::notice title=MARK::Crypto Live run started at $(date -u) on $GITHUB_SHA"

      - name: Run trader
        env:
          KRAKEN_API_KEY: ${{ secrets.KRAKEN_API_KEY }}
          KRAKEN_API_SECRET: ${{ secrets.KRAKEN_API_SECRET }}
        run: |
          mkdir -p .state data
          python -u main.py | tee -a run.log

      # -------- (Optional) Update simple daily-cap note from logs --------
      - name: Update daily cap state from log
        run: |
          echo "FREE_USD: $(grep -Eo 'FREE_USD:\s*\$\s*[0-9]+(\.[0-9]+)?' -h run.log | tail -1 || true)"
          echo "Spent this run: $0.00 | New remaining today: ${{ env.DAILY_CAP_USD }}"

      # -------- Persistent state & tax ledger (save) --------
      - name: Save .state cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .state
          key: state-${{ github.ref_name }}-v1

      - name: Save tax ledger
        if: always()
        uses: actions/cache/save@v4
        with:
          path: data
          key: tax-${{ github.ref_name }}-v1
