name: Crypto Live (Every 20 min â€” LIVE)

on:
  workflow_dispatch:
  schedule:
    # Every 20 minutes
    - cron: "*/20 * * * *"

# Prevent overlapping runs of THIS workflow on the same branch.
# If you trigger a new run while one is in progress, the old one will be cancelled
# (you'll see "The operation was canceled" in the logs).
# Using workflow+ref ensures other workflows don't cancel this one.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Restore .state cache
        uses: actions/cache/restore@v4
        with:
          path: .state
          key: state-main-${{ github.run_id }}
          restore-keys: |
            state-main-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Ensure state folder exists
        run: mkdir -p .state

      - name: MARK
        run: echo "::notice title=MARK::Crypto Live run started at $(date -u) on $GITHUB_SHA"

      - name: Run trader
        env:
          MODE: live                # your app reads this if wired
          EXCHANGE: kraken          # if your app uses it
          PER_TRADE_USD: "10"       # tune as needed
          DAILY_CAP_USD: "25"       # tune as needed
          DROP_PCT: "2.0"           # or your preferred gate
        run: |
          echo "=== START TRADING OUTPUT ==="
          python -V
          python main.py
          echo "=== END TRADING OUTPUT ==="

      - name: Save .state cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .state
          key: state-main-${{ github.run_id }}
