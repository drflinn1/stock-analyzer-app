name: Crypto Live — Every 15m (Live + Dust Sweep)

on:
  workflow_dispatch:
  schedule:
    - cron: "*/15 * * * *"  # every 15 minutes

permissions:
  contents: read

concurrency:
  group: crypto-live
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    env:
      # ====== EXECUTION TOGGLES ======
      DRY_RUN: "false"            # << LIVE MODE (real orders) >>
      RUN_SWITCH: "on"            # off = skip trading loop but still boot/log

      # ====== EXCHANGE / ROUTING ======
      EXCHANGE: "kraken"
      BASE_QUOTE: "USD"           # trade against USD on Kraken

      # ====== POSITION SIZING / ROTATION ======
      MAX_POSITIONS: "12"         # aligns with what you’re seeing on Kraken
      MAX_BUYS_PER_RUN: "1"       # keep 1 to limit churn per 15m tick
      ROTATE_WHEN_FULL: "true"    # replace weakest to enter a stronger one
      ROTATE_WHEN_CASH_SHORT: "true"  # sell a laggard if a better pick needs cash

      # ====== ORDER GUARDS ======
      MIN_NOTIONAL_USD: "5"       # ignore tiny orders below this
      DUST_MIN_USD: "2"           # << new: sweep anything <= $2 to USD >>
      RESERVE_CASH_PCT: "5"       # keep a little dry powder (set 0 to disable)

      # ====== RISK CONTROLS ======
      TP_PCT: "2.0"               # take-profit target (percent)
      SL_PCT: "3.5"               # stop-loss (percent)
      TRAIL_PCT: "1.2"            # trailing take-profit (percent)
      DAILY_LOSS_CAP: "3"         # auto-stop for the day if P/L <= -3%
      AUTO_PAUSE_ON_ERROR: "true" # fail-safe pause on unrecoverable errors

      # ====== LOGGING / OUTPUT ======
      LOG_LEVEL: "INFO"
      KPI_CSV_PATH: ".state/kpi_history.csv"
      STATE_DIR: ".state"

      # ====== MISC (safe defaults in code if unset) ======
      TIMEFRAME: "15m"
      TOPK: "6"                   # if your code uses Top-K autopick
      COOL_DOWN_MINUTES: "30"

      # ====== DRY RUN BANNER / COMPLIANCE ======
      SHOW_BANNER: "true"

      # ====== SECRETS INJECTED AT RUNTIME ======
      KRAKEN_API_KEY: ${{ secrets.KRAKEN_API_KEY }}
      KRAKEN_API_SECRET: ${{ secrets.KRAKEN_API_SECRET }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            python -m pip install --upgrade pip
            pip install ccxt pandas numpy requests python-dateutil
          fi

      - name: Print mode & guards
        run: |
          echo "Mode: DRY_RUN=${DRY_RUN}, RUN_SWITCH=${RUN_SWITCH}"
          echo "Dust threshold: DUST_MIN_USD=${DUST_MIN_USD}"
          echo "Max positions: ${MAX_POSITIONS}, Max buys per run: ${MAX_BUYS_PER_RUN}"
          echo "Rotate when full: ${ROTATE_WHEN_FULL}, Rotate when cash short: ${ROTATE_WHEN_CASH_SHORT}"
          echo "Daily loss cap: ${DAILY_LOSS_CAP}%"
          echo "State dir: ${STATE_DIR}"

      - name: Run Crypto Live
        id: runbot
        run: |
          mkdir -p "${STATE_DIR}"
          python -u main.py

      - name: Summarize run
        if: always()
        run: |
          echo "----- SUMMARY -----"
          if [ -f "${STATE_DIR}/summary.txt" ]; then
            cat "${STATE_DIR}/summary.txt" || true
          else
            echo "No summary.txt found (ok if your script logs to stdout only)."
          fi

      - name: Upload state & logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: crypto-live-state-${{ github.run_id }}
          path: |
            .state/**
            **/run.log
            **/summary.txt
          if-no-files-found: ignore
