name: Crypto Live â€” Guarded Auto-Pick + Hot Movers Bias (LIVE)

on:
  workflow_dispatch:
    inputs:
      DRY_RUN:
        description: 'true = simulate orders; false = send real orders'
        required: true
        default: 'false'
      RUN_SWITCH:
        description: 'ON to run, OFF to skip early'
        required: true
        default: 'ON'
  schedule:
    - cron: '*/15 * * * *'

jobs:
  crypto_live:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.RUN_SWITCH != 'OFF' }}
    env:
      # ---- Broker / CCXT ----
      EXCHANGE_ID: kraken
      CCXT_API_KEY: ${{ secrets.CCXT_API_KEY }}
      CCXT_API_SECRET: ${{ secrets.CCXT_API_SECRET }}
      CCXT_API_PASSWORD: ${{ secrets.CCXT_API_PASSWORD }}

      # ---- Master switches ----
      DRY_RUN: ${{ github.event.inputs.DRY_RUN || 'false' }}   # default LIVE
      RUN_SWITCH: ${{ github.event.inputs.RUN_SWITCH || 'ON' }}

      # ---- Universe / filters ----
      WHITELIST_CSV: "BTC/USD,ETH/USD,SOL/USD,DOGE/USD,ZEC/USD"
      MAX_SPREAD_BPS: "40"
      MAX_POSITIONS: "4"
      TOP_K: "3"
      MIN_USD_BAL: "100"
      USD_PER_TRADE: "10"
      MIN_ORDER_USD: "5"

      # ---- P&L guards ----
      MAX_DAILY_NEW_ENTRIES: "4"
      MAX_DAILY_LOSS_USD: "25"

      # ---- Exits / management ----
      TP_PCT: "0.035"
      SL_PCT: "0.020"
      TRAIL_PCT: "0.025"

      # ---- Hot movers bias ----
      HOT_LIST: "ZEC/USD"
      HOT_BIAS_BPS: "50"

      # ---- Files & outputs ----
      KPI_CSV: ".state/kpi_history.csv"
      STATE_DIR: ".state"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install ccxt==4.3.82

      - name: Prepare state directory and seed files
        shell: bash
        run: |
          set -e
          mkdir -p .state
          [ -s .state/anchors.json ] || echo "{}" > .state/anchors.json
          [ -s .state/kpi_history.csv ] || echo "ts,dry_run,picked,scores,hot_list,usd_free,actions" > .state/kpi_history.csv
          [ -f .state/last_risk_signal.txt ] || echo "UNKNOWN" > .state/last_risk_signal.txt
          echo "Prepared .state contents:" && ls -la .state

      - name: Confirm live/dry status
        run: |
          echo "RUN_SWITCH=${RUN_SWITCH}"
          echo "DRY_RUN=${DRY_RUN}"
          if [ "${RUN_SWITCH}" = "OFF" ]; then
            echo "RUN_SWITCH=OFF â†’ exiting early."; exit 0; fi
          if [ "${DRY_RUN}" = "true" ]; then
            echo "ðŸš§ DRY RUN â€” NO REAL ORDERS WILL BE SENT ðŸš§"
          else
            echo "âœ… LIVE MODE â€” REAL ORDERS ENABLED"
          fi

      - name: Run Crypto Live
        env:
          PYTHONWARNINGS: "ignore"
        run: |
          python -u main.py

      - name: List state before pack (debug)
        if: always()
        run: |
          echo "Workspace:" && pwd
          echo "State dir listing:" && ls -la .state || true

      - name: Pack .state into zip
        if: always()
        run: |
          rm -f state_${{ github.run_id }}.zip
          # zip handles dot-folders reliably across runners
          zip -r state_${{ github.run_id }}.zip .state >/dev/null
          ls -l state_${{ github.run_id }}.zip

      - name: Upload state artifact (zip)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: state-${{ github.run_id }}
          path: state_${{ github.run_id }}.zip
          if-no-files-found: error
          retention-days: 7
