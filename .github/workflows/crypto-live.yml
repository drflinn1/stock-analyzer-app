name: Crypto Live (Every 15 min) — LIVE

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

jobs:
  trade:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    env:
      EXCHANGE: "kraken"

      # LIVE orders:
      DRY_RUN: "false"

      # One-time toggle: set to "true" for a single run to clear stale paper state,
      # then set back to "false".
      RESET_STATE: "true"

      # Use USD markets (matches your Kraken balance)
      SYMBOLS: "BTC/USD,ETH/USD,DOGE/USD,ADA/USD,XRP/USD"

      # Option A — opened up a bit
      PER_TRADE_USD: "20"
      DAILY_CAP_USD: "100"
      MIN_NOTIONAL_USD: "5"
      BUY_GATE_PCT: "0.0"

      # Trailing profit
      TRAIL_ACTIVATE_PCT: "3.0"
      TRAIL_OFFSET_PCT: "1.0"

      # Secrets
      KRAKEN_API_KEY: ${{ secrets.KRAKEN_API_KEY }}
      KRAKEN_API_SECRET: ${{ secrets.KRAKEN_API_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore .state cache
        uses: actions/cache/restore@v4
        with:
          path: .state
          key: state-${{ github.run_id }}
          restore-keys: |
            state-

      # >>> One-time purge of local state when flipping from DRY to LIVE
      - name: Reset state (one-time)
        if: env.RESET_STATE == 'true'
        run: |
          rm -rf .state
          echo "Purged .state (positions/trails/daily spend)"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install ccxt

      - name: Sanity — Keys present if live
        if: env.DRY_RUN == 'false'
        run: |
          test -n "${KRAKEN_API_KEY}" || (echo "Missing KRAKEN_API_KEY" && exit 1)
          test -n "${KRAKEN_API_SECRET}" || (echo "Missing KRAKEN_API_SECRET" && exit 1)
          echo "Secrets look present."

      - name: Run trader
        run: |
          echo "=== START TRADING OUTPUT ==="
          python main.py
          echo "=== END TRADING OUTPUT ==="

      - name: Save .state cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .state
          key: state-${{ github.run_id }}
