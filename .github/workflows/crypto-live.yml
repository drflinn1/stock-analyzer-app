name: Crypto Live â€” Mean Revert (every 5m)

on:
  workflow_dispatch:
    inputs:
      DRY_RUN:
        description: 'Dry run (no orders)'
        required: true
        default: 'true'
        type: choice
        options: ['true','false']
      RUN_SWITCH:
        description: 'Master ON/OFF switch'
        required: true
        default: 'true'
        type: choice
        options: ['true','false']
      TOP_K:
        description: 'Auto-pick Top-K by 24h % change'
        required: true
        default: '6'
        type: string
      MAX_POSITIONS:
        description: 'Max concurrent positions'
        required: true
        default: '6'
        type: string
      MIN_NOTIONAL:
        description: 'Exchange min notional per order (USD)'
        required: true
        default: '5.0'
        type: string
      RESERVE_CASH_PCT:
        description: 'Keep this % in cash'
        required: true
        default: '0.05'
        type: string
      ROTATE_WHEN_FULL:
        description: 'Allow rotation when already at MAX_POSITIONS'
        required: true
        default: 'false'
        type: choice
        options: ['true','false']
      MAX_BUYS_PER_RUN:
        description: 'Max new buys/rotations per run'
        required: true
        default: '1'
        type: string
      ROTATE_WHEN_CASH_SHORT:
        description: 'Allow targeted rotation only when cash is short'
        required: true
        default: 'true'
        type: choice
        options: ['true','false']
      SYMBOLS_WHITELIST:
        description: 'Optional hard whitelist (comma-separated, e.g., BTC/USD,ETH/USD)'
        required: false
        default: ''
        type: string

  schedule:
    - cron: '*/5 * * * *'

permissions:
  contents: read

concurrency:
  group: crypto-live
  cancel-in-progress: false

env:
  # ----- Exchange auth -----
  EXCHANGE_ID: "kraken"
  API_KEY: ${{ secrets.KRAKEN_API_KEY }}
  API_SECRET: ${{ secrets.KRAKEN_API_SECRET }}
  API_PASSWORD: ""
  DUST_MIN_USD: "2"

  # ----- Quote & state -----
  QUOTE: "USD"
  STATE_DIR: ".state"

  # ----- Runtime knobs (inputs <= 10) -----
  DRY_RUN: ${{ inputs.DRY_RUN || 'true' }}
  RUN_SWITCH: ${{ inputs.RUN_SWITCH || 'true' }}
  TOP_K: ${{ inputs.TOP_K || '6' }}
  MAX_POSITIONS: ${{ inputs.MAX_POSITIONS || '6' }}
  MIN_NOTIONAL: ${{ inputs.MIN_NOTIONAL || '5.0' }}
  RESERVE_CASH_PCT: ${{ inputs.RESERVE_CASH_PCT || '0.05' }}
  ROTATE_WHEN_FULL: ${{ inputs.ROTATE_WHEN_FULL || 'false' }}
  MAX_BUYS_PER_RUN: ${{ inputs.MAX_BUYS_PER_RUN || '1' }}
  ROTATE_WHEN_CASH_SHORT: ${{ inputs.ROTATE_WHEN_CASH_SHORT || 'true' }}
  SYMBOLS_WHITELIST: ${{ inputs.SYMBOLS_WHITELIST }}

  # ----- Extra knobs (not in inputs; edit here or set as repository variables) -----
  SYMBOLS_EXCLUDE: ""
  TP_PCT: "5"   # TAKE_PROFIT percent; set here if you want different default
  SL_PCT: "3"   # STOP_LOSS percent
  TSL_PCT: "4"  # TRAIL (trailing) percent

jobs:
  live:
    name: Run Crypto bot (mean-revert)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install ccxt==4.*

      - name: Show run parameters
        run: |
          echo "RUN @ $(date -u) UTC"
          echo "EXCHANGE_ID=$EXCHANGE_ID"
          echo "QUOTE=$QUOTE"
          echo "DRY_RUN=$DRY_RUN RUN_SWITCH=$RUN_SWITCH"
          echo "TOP_K=$TOP_K MAX_POSITIONS=$MAX_POSITIONS MIN_NOTIONAL=$MIN_NOTIONAL"
          echo "RESERVE_CASH_PCT=$RESERVE_CASH_PCT"
          echo "ROTATE_WHEN_FULL=$ROTATE_WHEN_FULL MAX_BUYS_PER_RUN=$MAX_BUYS_PER_RUN ROTATE_WHEN_CASH_SHORT=$ROTATE_WHEN_CASH_SHORT"
          echo "TP_PCT=$TP_PCT SL_PCT=$SL_PCT TSL_PCT=$TSL_PCT"
          echo "WHITELIST=$SYMBOLS_WHITELIST"
          echo "EXCLUDE=$SYMBOLS_EXCLUDE"
          echo "STATE_DIR=$STATE_DIR"

      - name: Run bot
        run: python main.py

      - name: Upload .state artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: state-${{ github.run_id }}
          path: .state/**
          if-no-files-found: ignore
