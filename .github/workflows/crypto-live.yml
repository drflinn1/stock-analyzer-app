name: Crypto Live (Every 30 min — Auto-Pick + TP/SL)

on:
  schedule:
    - cron: "*/30 * * * *"   # every 30 minutes (UTC)
  workflow_dispatch:
    inputs:
      DRY_RUN:
        description: "true or false"
        required: true
        default: "false"

permissions:
  contents: read

concurrency:
  group: crypto-live
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas numpy ccxt python-dateutil
          fi

      - name: Run Crypto Trader (Auto-Pick)
        env:
          # controls (tweaks)
          DRY_RUN:             ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.DRY_RUN) || 'false' }}
          PER_TRADE_USD:       "10"      # ↑ from 3
          DAILY_CAP_USD:       "20"      # keep small: 2 buys per run
          AVOID_REBUY:         "true"
          TAKE_PROFIT_PCT:     "0.025"   # 2.5% TP
          STOP_LOSS_PCT:       "0.015"   # 1.5% SL

          # auto-pick universe (USD quote on Kraken)
          AUTO_PICK:           "true"
          QUOTE_CCY:           "USD"
          PICKS_PER_RUN:       "2"
          MIN_QUOTE_VOL_USD:   "2000000"  # min 24h quote$ volume
          TREND_FILTER:        "true"     # only buy if 1h EMA12>EMA26 & RSI>50
          COOLDOWN_MINUTES:    "60"       # per-symbol cooldown after a buy

          # exchange (Kraken)
          EXCHANGE_ID:         "kraken"
          API_KEY:             ${{ secrets.KRAKEN_API_KEY }}
          API_SECRET:          ${{ secrets.KRAKEN_API_SECRET }}
          API_PASSWORD:        ${{ secrets.KRAKEN_API_PASSWORD }}

          LOG_LEVEL: "INFO"
        run: |
          python trader/crypto_engine.py
