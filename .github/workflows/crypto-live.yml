name: crypto live

on:
  workflow_dispatch:
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes

permissions:
  contents: read

jobs:
  crypto-live:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    env:
      # --- Mode toggles ---
      BOT_MODE: TRADE            # << run real trader (GUARD prints demo instead)
      DRY_RUN: "false"           # << LIVE MODE (set "true" for simulator)
      RUN_SWITCH: "on"

      # --- Exchange keys (ensure these secrets exist) ---
      KRAKEN_API_KEY: ${{ secrets.KRAKEN_API_KEY }}
      KRAKEN_API_SECRET: ${{ secrets.KRAKEN_API_SECRET }}

      # --- Trading knobs (optional; your engine may read these) ---
      TAKE_PROFIT: "3.5"
      STOP_LOSS: "2.0"
      TRAIL_PCT: "1.2"

      # --- Spec-tier defaults (used only in GUARD mode) ---
      SPEC_MAX_SPREAD_PCT: "1.0"
      SPEC_MIN_DOLLAR_VOL: "25000"
      SPEC_MAX_AGE_HRS: "48"

      # Optional: point to a different entry module if not trader.crypto_engine
      # TRADER_MODULE: "trader.crypto_engine"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install ccxt pandas; fi

      - name: Confirm mode
        run: |
          echo "RUN_SWITCH=${RUN_SWITCH}"
          echo "DRY_RUN=${DRY_RUN}"
          echo "BOT_MODE=${BOT_MODE}"
          if [ "${DRY_RUN}" = "true" ]; then
            echo "🚧 DRY RUN — NO REAL ORDERS SENT 🚧"
          else
            echo "⚠️ LIVE MODE — REAL ORDERS ENABLED"
          fi

      - name: Run Crypto Live
        run: |
          python -u main.py

      - name: Pack .state into zip
        run: |
          mkdir -p .state
          zip -r "state_${GITHUB_RUN_ID}.zip" .state || true

      - name: Upload state artifact (zip)
        uses: actions/upload-artifact@v4
        with:
          name: state_${{ github.run_id }}
          path: "state_${{ github.run_id }}.zip"
          if-no-files-found: ignore
