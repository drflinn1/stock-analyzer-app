name: Crypto Live — Guarded

on:
  workflow_dispatch:
    inputs:
      DRY_RUN:
        description: "Simulate only (true/false)"
        required: true
        default: "true"
      EXCHANGE_ID:
        description: "CCXT exchange id"
        required: true
        default: "kraken"
      MAX_ENTRIES_PER_RUN:
        description: "How many new buys per run"
        required: true
        default: "1"
      USD_PER_TRADE:
        description: "Notional USD per buy"
        required: true
        default: "10"
      TAKE_PROFIT_PCT:
        description: "e.g., 0.035 = 3.5% TP"
        required: true
        default: "0.035"
      STOP_LOSS_PCT:
        description: "e.g., 0.020 = 2.0% SL"
        required: true
        default: "0.020"
      TRAIL_PCT:
        description: "Trailing stop percent, e.g., 0.025"
        required: true
        default: "0.025"
      DAILY_LOSS_CAP_PCT:
        description: "Pause if realized P/L below this (e.g., -0.02)"
        required: true
        default: "-0.02"
      RESERVE_USD:
        description: "Keep this much USD in cash"
        required: true
        default: "100"
      UNIVERSE_MODE:
        description: "auto or whitelist"
        required: true
        default: "whitelist"
      WHITELIST:
        description: "Comma-separated symbols (only if UNIVERSE_MODE=whitelist)"
        required: true
        default: "BTC/USD,ETH/USD,SOL/USD,DOGE/USD"
      TOPK:
        description: "If auto-pick, how many symbols to consider"
        required: true
        default: "8"
      MAX_POSITIONS:
        description: "Cap total concurrent open positions"
        required: true
        default: "6"
      AVOID_STABLES:
        description: "Filter out obvious stables (true/false)"
        required: true
        default: "true"

  schedule:
    # Every 15 minutes
    - cron: "*/15 * * * *"

permissions:
  contents: read

concurrency:
  group: crypto-live-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 14

    env:
      # Secrets (set in repo → Settings → Secrets and variables → Actions)
      KRAKEN_API_KEY: ${{ secrets.KRAKEN_API_KEY }}
      KRAKEN_API_SECRET: ${{ secrets.KRAKEN_API_SECRET }}
      # General
      DRY_RUN: ${{ inputs.DRY_RUN }}
      EXCHANGE_ID: ${{ inputs.EXCHANGE_ID }}
      MAX_ENTRIES_PER_RUN: ${{ inputs.MAX_ENTRIES_PER_RUN }}
      USD_PER_TRADE: ${{ inputs.USD_PER_TRADE }}
      TAKE_PROFIT_PCT: ${{ inputs.TAKE_PROFIT_PCT }}
      STOP_LOSS_PCT: ${{ inputs.STOP_LOSS_PCT }}
      TRAIL_PCT: ${{ inputs.TRAIL_PCT }}
      DAILY_LOSS_CAP_PCT: ${{ inputs.DAILY_LOSS_CAP_PCT }}
      RESERVE_USD: ${{ inputs.RESERVE_USD }}
      UNIVERSE_MODE: ${{ inputs.UNIVERSE_MODE }}
      WHITELIST: ${{ inputs.WHITELIST }}
      TOPK: ${{ inputs.TOPK }}
      MAX_POSITIONS: ${{ inputs.MAX_POSITIONS }}
      AVOID_STABLES: ${{ inputs.AVOID_STABLES }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-py311-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-py311-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install ccxt==4.4.38 pandas==2.2.2
          fi

      - name: Show inputs
        run: |
          echo "DRY_RUN=${DRY_RUN}"
          echo "EXCHANGE_ID=${EXCHANGE_ID}"
          echo "UNIVERSE_MODE=${UNIVERSE_MODE}"
          echo "WHITELIST=${WHITELIST}"

      - name: Run Crypto Live
        run: |
          python -u main.py

      - name: Upload KPI history
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kpi-history
          path: |
            .state/kpi_history.csv
            .state/summary_last.txt
            .state/positions.json
          if-no-files-found: ignore
