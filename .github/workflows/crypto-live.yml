name: Crypto Live (Every 15 min — CONCENTRATED + PYRAMID + SWEEP + TAX)

on:
  workflow_dispatch:
    inputs:
      DRY_RUN:
        description: "Simulate only (true/false)"
        required: true
        default: "true"
      EXCHANGE_ID:
        description: "CCXT exchange id (e.g., kraken)"
        required: true
        default: "kraken"
      BASE_CURRENCY:
        description: "Quote/settle currency"
        required: true
        default: "USD"
      UNIVERSE:
        description: "Comma list or 'auto'"
        required: true
        default: "auto"
      MAX_POSITIONS:
        description: "Cap of open positions"
        required: true
        default: "4"
      PER_TRADE_USD:
        description: "Notional per entry"
        required: true
        default: "25"
      RESERVE_USD:
        description: "Cash reserve not used"
        required: true
        default: "100"
      DAILY_LOSS_CAP_USD:
        description: "Stop trading for the day after this net loss"
        required: true
        default: "40"
      RUN_SWEEPER:
        description: "Run Dust Sweeper after bot (true/false)"
        required: true
        default: "true"

      # ----- Auto-pick controls (now visible in the UI) -----
      AUTO_TOP_K:
        description: "Auto-pick: number of symbols to choose"
        required: true
        default: "4"
      AUTO_MIN_USD_VOL:
        description: "Auto-pick: minimum 24h USD volume (e.g., 2000000 = $2M)"
        required: true
        default: "2000000"
      AUTO_MIN_PRICE:
        description: "Auto-pick: minimum last price (e.g., 0.05)"
        required: true
        default: "0.05"
      AUTO_EXCLUDE:
        description: "Auto-pick: exclude list (comma symbols)"
        required: true
        default: "USDT/USD,USDC/USD,EUR/USD,GBP/USD,USD/USD,SPX/USD,PUMP/USD,BABY/USD,ALKIMI/USD"

  schedule:
    - cron: "*/15 * * * *"  # every 15 minutes

jobs:
  crypto:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      # Core
      DRY_RUN: ${{ inputs.DRY_RUN || 'true' }}
      EXCHANGE_ID: ${{ inputs.EXCHANGE_ID || 'kraken' }}
      BASE_CURRENCY: ${{ inputs.BASE_CURRENCY || 'USD' }}
      UNIVERSE: ${{ inputs.UNIVERSE || 'auto' }}
      MAX_POSITIONS: ${{ inputs.MAX_POSITIONS || '4' }}
      PER_TRADE_USD: ${{ inputs.PER_TRADE_USD || '25' }}
      RESERVE_USD: ${{ inputs.RESERVE_USD || '100' }}
      DAILY_LOSS_CAP_USD: ${{ inputs.DAILY_LOSS_CAP_USD || '40' }}
      RUN_SWEEPER: ${{ inputs.RUN_SWEEPER || 'true' }}

      # Auto-pick (read by trader/crypto_engine.py)
      AUTO_TOP_K: ${{ inputs.AUTO_TOP_K || inputs.MAX_POSITIONS || '4' }}
      AUTO_MIN_USD_VOL: ${{ inputs.AUTO_MIN_USD_VOL || '2000000' }}
      AUTO_MIN_PRICE: ${{ inputs.AUTO_MIN_PRICE || '0.05' }}
      AUTO_EXCLUDE: ${{ inputs.AUTO_EXCLUDE || 'USDT/USD,USDC/USD,EUR/USD,GBP/USD,USD/USD,SPX/USD,PUMP/USD,BABY/USD,ALKIMI/USD' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show inputs
        run: |
          echo "DRY_RUN=${DRY_RUN}"
          echo "EXCHANGE_ID=${EXCHANGE_ID}"
          echo "BASE_CURRENCY=${BASE_CURRENCY}"
          echo "UNIVERSE=${UNIVERSE}"
          echo "MAX_POSITIONS=${MAX_POSITIONS}"
          echo "PER_TRADE_USD=${PER_TRADE_USD}"
          echo "RESERVE_USD=${RESERVE_USD}"
          echo "DAILY_LOSS_CAP_USD=${DAILY_LOSS_CAP_USD}"
          echo "RUN_SWEEPER=${RUN_SWEEPER}"
          echo "AUTO_TOP_K=${AUTO_TOP_K}"
          echo "AUTO_MIN_USD_VOL=${AUTO_MIN_USD_VOL}"
          echo "AUTO_MIN_PRICE=${AUTO_MIN_PRICE}"
          echo "AUTO_EXCLUDE=${AUTO_EXCLUDE}"

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (ccxt only — fast)
        run: |
          python -m pip install --upgrade pip
          pip install ccxt

      - name: Run Crypto Bot (auto-select engine)
        env:
          CCXT_API_KEY: ${{ secrets.CCXT_API_KEY }}
          CCXT_API_SECRET: ${{ secrets.CCXT_API_SECRET }}
          CCXT_API_PASSWORD: ${{ secrets.CCXT_API_PASSWORD }}
        run: |
          python -u trader/launcher.py

      - name: Dust Sweeper
        if: env.RUN_SWEEPER == 'true'
        env:
          CCXT_API_KEY: ${{ secrets.CCXT_API_KEY }}
          CCXT_API_SECRET: ${{ secrets.CCXT_API_SECRET }}
          CCXT_API_PASSWORD: ${{ secrets.CCXT_API_PASSWORD }}
        run: |
          python -u trader/dust_sweeper.py
