name: Crypto Live (Every 15 min — AGGRESSIVE)

on:
  workflow_dispatch:
  schedule:
    # Every 15 minutes
    - cron: "*/15 * * * *"

concurrency:
  group: crypto-live-aggressive
  cancel-in-progress: true   # <— changed to prevent overlapping runs

jobs:
  trade:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    env:
      # ===== Core run mode =====
      MODE: "live"
      DRY_RUN: "false"                  # real orders
      EXCHANGE: "kraken"
      BASE_CCY: "USD"

      # ===== Universe (auto + ranking) =====
      AUTO_UNIVERSE: "true"
      UNIVERSE_TOP_N: "20"
      MIN_LIQ_USD_24H: "200000"
      MOMENTUM_LOOKBACK_H: "24"
      MIN_PRICE_USD: "0.01"
      MIN_NOTIONAL_USD: "5"

      # ===== Multi-timeframe confirmation =====
      TF_FAST: "15m"
      TF_SLOW: "1h"
      EMA_SHORT: "20"
      EMA_LONG: "50"
      RSI_LEN: "14"
      RSI_BUY: "55"
      RSI_SELL: "45"

      # ===== Volatility-scaled position sizing =====
      ATR_LEN: "14"
      RISK_PER_TRADE_PCT: "1.0"
      PER_TRADE_USD_CAP: "40"
      MAX_TRADES_PER_RUN: "10"
      MAX_CONCURRENT_POS: "16"
      PORTFOLIO_MAX_EXPOSURE_PCT: "80"

      # ===== Exits: ATR TP + trailing + SL =====
      ATR_MULTIPLIER_TP: "1.2"
      ATR_MULTIPLIER_TS: "1.6"
      ATR_MULTIPLIER_SL: "2.4"
      TRAIL_ACTIVATE_AT_TP_FRAC: "0.6"

      # ===== Budget rails =====
      DAILY_CAP_USD: "200"
      MIN_FREE_CASH_USD: "25"
      SLIPPAGE_PCT: "0.10"

      # ===== Drawdown circuit breaker =====
      DRAWDOWN_PCT_TRIP: "12"
      DRAWDOWN_COOLDOWN_RUNS: "8"

      # ===== Telemetry =====
      LOG_LEVEL: "INFO"
      WRITE_EQUITY_CSV: "true"
      PRINT_EQUITY_ONE_LINER: "true"

      # ===== Exchange creds =====
      KRAKEN_API_KEY: "${{ secrets.KRAKEN_API_KEY }}"
      KRAKEN_API_SECRET: "${{ secrets.KRAKEN_API_SECRET }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install ccxt pandas numpy ta; fi

      - name: Run trader
        id: run_trader
        env:
          DRY_RUN: ${{ env.DRY_RUN }}
          EXCHANGE: ${{ env.EXCHANGE }}
          BASE_CCY: ${{ env.BASE_CCY }}

          AUTO_UNIVERSE: ${{ env.AUTO_UNIVERSE }}
          UNIVERSE_TOP_N: ${{ env.UNIVERSE_TOP_N }}
          MIN_LIQ_USD_24H: ${{ env.MIN_LIQ_USD_24H }}
          MOMENTUM_LOOKBACK_H: ${{ env.MOMENTUM_LOOKBACK_H }}
          MIN_PRICE_USD: ${{ env.MIN_PRICE_USD }}
          MIN_NOTIONAL_USD: ${{ env.MIN_NOTIONAL_USD }}

          TF_FAST: ${{ env.TF_FAST }}
          TF_SLOW: ${{ env.TF_SLOW }}
          EMA_SHORT: ${{ env.EMA_SHORT }}
          EMA_LONG: ${{ env.EMA_LONG }}
          RSI_LEN: ${{ env.RSI_LEN }}
          RSI_BUY: ${{ env.RSI_BUY }}
          RSI_SELL: ${{ env.RSI_SELL }}

          ATR_LEN: ${{ env.ATR_LEN }}
          RISK_PER_TRADE_PCT: ${{ env.RISK_PER_TRADE_PCT }}
          PER_TRADE_USD_CAP: ${{ env.PER_TRADE_USD_CAP }}
          MAX_TRADES_PER_RUN: ${{ env.MAX_TRADES_PER_RUN }}
          MAX_CONCURRENT_POS: ${{ env.MAX_CONCURRENT_POS }}
          PORTFOLIO_MAX_EXPOSURE_PCT: ${{ env.PORTFOLIO_MAX_EXPOSURE_PCT }}

          ATR_MULTIPLIER_TP: ${{ env.ATR_MULTIPLIER_TP }}
          ATR_MULTIPLIER_TS: ${{ env.ATR_MULTIPLIER_TS }}
          ATR_MULTIPLIER_SL: ${{ env.ATR_MULTIPLIER_SL }}
          TRAIL_ACTIVATE_AT_TP_FRAC: ${{ env.TRAIL_ACTIVATE_AT_TP_FRAC }}

          DAILY_CAP_USD: ${{ env.DAILY_CAP_USD }}
          MIN_FREE_CASH_USD: ${{ env.MIN_FREE_CASH_USD }}
          SLIPPAGE_PCT: ${{ env.SLIPPAGE_PCT }}

          DRAWDOWN_PCT_TRIP: ${{ env.DRAWDOWN_PCT_TRIP }}
          DRAWDOWN_COOLDOWN_RUNS: ${{ env.DRAWDOWN_COOLDOWN_RUNS }}

          LOG_LEVEL: ${{ env.LOG_LEVEL }}
          WRITE_EQUITY_CSV: ${{ env.WRITE_EQUITY_CSV }}
          PRINT_EQUITY_ONE_LINER: ${{ env.PRINT_EQUITY_ONE_LINER }}
        run: |
          python -u main.py

      - name: Upload equity history (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: equity_history
          path: data/equity_history.csv
          if-no-files-found: ignore
