name: Crypto Live (Every 15 min)

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch: {}

concurrency:
  group: crypto-live
  cancel-in-progress: false

jobs:
  live:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install ccxt; fi

      - name: Restore state/ledger cache
        uses: actions/cache/restore@v4
        with:
          path: |
            .state
            data/tax_ledger.csv
          key: state-main-v1

      - name: Env (live trading)
        run: |
          echo "MODE=live" >> $GITHUB_ENV
          echo "DRY_RUN=false" >> $GITHUB_ENV
          echo "EXCHANGE=kraken" >> $GITHUB_ENV
          echo "MARKET=crypto" >> $GITHUB_ENV
          echo "QUOTE=USD" >> $GITHUB_ENV
          echo "SELL_DEBUG=0" >> $GITHUB_ENV
          echo "FORCE_SELL=0" >> $GITHUB_ENV   # <â€” important: OFF in live
          # buy controls
          echo "PER_TRADE_USD=10" >> $GITHUB_ENV
          echo "DAILY_CAP_USD=25" >> $GITHUB_ENV
          echo "AUTO_UNIVERSE_COUNT=500" >> $GITHUB_ENV
          # ATR exits on (normal mode)
          echo "ATR_EXITS=1" >> $GITHUB_ENV
          echo "ATR_PERIOD=14" >> $GITHUB_ENV
          echo "ATR_TP_MULT=1.5" >> $GITHUB_ENV
          echo "ATR_ACT_MULT=0.8" >> $GITHUB_ENV
          echo "ATR_TRAIL_MULT=1.0" >> $GITHUB_ENV
          echo "ATR_STOP_MULT=1.2" >> $GITHUB_ENV
          # % exits fallback (unused while ATR_EXITS=1; keep as defaults)
          echo "TAKE_PROFIT_PCT=0.5" >> $GITHUB_ENV
          echo "TRAILING_ACTIVATE_PCT=0.4" >> $GITHUB_ENV
          echo "TRAILING_DELTA_PCT=0.2" >> $GITHUB_ENV
          echo "STOP_LOSS_PCT=0" >> $GITHUB_ENV
          # Secrets
          echo "KRAKEN_API_KEY=${{ secrets.KRAKEN_API_KEY }}" >> $GITHUB_ENV
          echo "KRAKEN_API_SECRET=${{ secrets.KRAKEN_API_SECRET }}" >> $GITHUB_ENV

      - name: Run trader
        run: |
          mkdir -p .state data
          python -u main.py

      - name: Save caches back (best-effort)
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            .state
            data/tax_ledger.csv
          key: state-main-v1
