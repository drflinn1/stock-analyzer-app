name: Equities Live (Alpaca Paper — 15m)

on:
  workflow_dispatch:
    inputs:
      DRY_RUN:
        description: "If true, log only — no orders"
        required: false
        default: "false"
      PER_TRADE_USD:
        description: "Notional dollars per new buy"
        required: false
        default: "1000"
      DAILY_CAP_USD:
        description: "Max total new buys per day"
        required: false
        default: "5000"
      MAX_POSITIONS:
        description: "Max concurrent long positions"
        required: false
        default: "10"
      UNIVERSE_MODE:
        description: "SP100 or USER_LIST (config/equities_universe.txt)"
        required: false
        default: "SP100"
      UNIVERSE_SIZE:
        description: "How many tickers to consider after ranking"
        required: false
        default: "20"
      EMA_FAST:
        description: "Fast EMA length"
        required: false
        default: "20"
      EMA_SLOW:
        description: "Slow EMA length"
        required: false
        default: "50"
      RSI_MIN:
        description: "Minimum RSI(14) to allow"
        required: false
        default: "50"
      RSI_MAX:
        description: "Maximum RSI(14) to allow"
        required: false
        default: "80"
      MIN_AVG_DOLLAR_VOL:
        description: "Min 20d avg dollar volume (price*volume)"
        required: false
        default: "20000000"  # $20M
      TP_PCT:
        description: "Take‑profit percent (e.g., 0.03 = 3%)"
        required: false
        default: "0.03"
      SL_PCT:
        description: "Stop‑loss percent (e.g., 0.02 = 2%)"
        required: false
        default: "0.02"
      USE_BRACKETS:
        description: "Use bracket orders with TP/SL"
        required: false
        default: "true"
  schedule:
    # Every 15 minutes during US market hours (13:00–20:59 UTC = 9:00–16:59 ET). Code also checks market clock.
    - cron: "*/15 13-20 * * 1-5"

permissions:
  contents: write

jobs:
  live:
    runs-on: ubuntu-latest
    concurrency:
      group: equities-live
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install alpaca-py yfinance pandas numpy ta pytz

      - name: Run Equities Engine
        env:
          # Secrets
          ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
          ALPACA_API_SECRET: ${{ secrets.ALPACA_API_SECRET }}
          # Tunables (inputs)
          DRY_RUN: ${{ inputs.DRY_RUN || 'false' }}
          PER_TRADE_USD: ${{ inputs.PER_TRADE_USD || '1000' }}
          DAILY_CAP_USD: ${{ inputs.DAILY_CAP_USD || '5000' }}
          MAX_POSITIONS: ${{ inputs.MAX_POSITIONS || '10' }}
          UNIVERSE_MODE: ${{ inputs.UNIVERSE_MODE || 'SP100' }}
          UNIVERSE_SIZE: ${{ inputs.UNIVERSE_SIZE || '20' }}
          EMA_FAST: ${{ inputs.EMA_FAST || '20' }}
          EMA_SLOW: ${{ inputs.EMA_SLOW || '50' }}
          RSI_MIN: ${{ inputs.RSI_MIN || '50' }}
          RSI_MAX: ${{ inputs.RSI_MAX || '80' }}
          MIN_AVG_DOLLAR_VOL: ${{ inputs.MIN_AVG_DOLLAR_VOL || '20000000' }}
          TP_PCT: ${{ inputs.TP_PCT || '0.03' }}
          SL_PCT: ${{ inputs.SL_PCT || '0.02' }}
          USE_BRACKETS: ${{ inputs.USE_BRACKETS || 'true' }}
        run: |
          python -u trader/equities_engine.py

      - name: Commit state changes (optional)
        run: |
          mkdir -p .state
          git config user.email "actions@github.com"
          git config user.name "github-actions"
          if [ -n "$(git status --porcelain .state 2>/dev/null)" ]; then
            git add .state
            git commit -m "Equities state update [skip ci]"
            git push
          else
            echo "No state changes to commit."
