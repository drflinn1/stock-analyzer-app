name: Equities Live — Alpaca 1D Bars

on:
  workflow_dispatch:
    inputs:
      DRY_RUN:
        description: "true or false"
        required: true
        default: "false"
      PER_TRADE_USD:
        description: "USD notional per buy"
        required: true
        default: "3"
      DAILY_CAP_USD:
        description: "USD daily spend cap"
        required: true
        default: "12"
      UNIVERSE:
        description: "Comma-separated tickers"
        required: true
        default: "AAPL,MSFT"
      MARKET_ONLY:
        description: "true to use market orders"
        required: true
        default: "true"
  # If you want a schedule, uncomment and tune (times are UTC)
  # schedule:
  #   - cron: "40 14 * * 1-5"   # example: 07:40 PT, weekdays

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
            # Ensure Alpaca SDK is present even if requirements.txt forgot it:
            pip install alpaca-py
          else
            pip install pandas numpy alpaca-py
          fi

      - name: Run Equities Engine
        env:
          # run-time knobs from the dispatch form
          DRY_RUN:        ${{ github.event.inputs.DRY_RUN }}
          PER_TRADE_USD:  ${{ github.event.inputs.PER_TRADE_USD }}
          DAILY_CAP_USD:  ${{ github.event.inputs.DAILY_CAP_USD }}
          UNIVERSE:       ${{ github.event.inputs.UNIVERSE }}
          MARKET_ONLY:    ${{ github.event.inputs.MARKET_ONLY }}

          # Alpaca credentials (add in repo Settings → Secrets and variables → Actions)
          ALPACA_API_KEY:     ${{ secrets.ALPACA_API_KEY }}
          ALPACA_SECRET_KEY:  ${{ secrets.ALPACA_SECRET_KEY }}
          ALPACA_PAPER:       "true"   # change to false if you flip live

          # Logging
          LOG_LEVEL: "INFO"
        run: |
          # Adjust path if you placed the engine elsewhere
          python equities_engine.py
