# FILE: trader/broker_alpaca.py
# (unchanged — see previous content)
# ...

# -------------------------------------------------------------
# FILE: .github/workflows/equities-live.yml
# Equities Live (Alpaca) — PAPER first (YAML fix #2)
# -------------------------------------------------------------

name: Equities Live (Alpaca — PAPER)

on:
  workflow_dispatch:
    inputs:
      DRY_RUN:
        description: "Dry run (paper)? true/false"
        required: false
        default: "true"
      PER_TRADE_USD:
        description: "USD per trade"
        required: false
        default: "25"
      DAILY_CAP_USD:
        description: "Max USD spent per day"
        required: false
        default: "50"
      UNIVERSE:
        description: "Comma-separated tickers"
        required: false
        default: "SPY,AAPL,MSFT,TSLA,NVDA,AMD"
  schedule:
    - cron: '35 13 * * 1-5'   # 09:35 ET during EDT
    - cron: '50 19 * * 1-5'   # 15:50 ET during EDT

jobs:
  trade:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas

      - name: Export env (safe defaults)
        run: |
          # DRY_RUN default to true when not provided
          echo "DRY_RUN=${{ github.event.inputs.DRY_RUN || 'true' }}" >> $GITHUB_ENV
          echo "PER_TRADE_USD=${{ github.event.inputs.PER_TRADE_USD || '25' }}" >> $GITHUB_ENV
          echo "DAILY_CAP_USD=${{ github.event.inputs.DAILY_CAP_USD || '50' }}" >> $GITHUB_ENV
          echo "UNIVERSE=${{ github.event.inputs.UNIVERSE || 'SPY,AAPL,MSFT,TSLA,NVDA,AMD' }}" >> $GITHUB_ENV
          echo "BROKER=alpaca" >> $GITHUB_ENV
          echo "ASSET_CLASS=equities" >> $GITHUB_ENV
          echo "AUTO_UNIVERSE=1" >> $GITHUB_ENV
          echo "MIN_NOTIONAL_USD=1.00" >> $GITHUB_ENV
          echo "ALPACA_BASE_URL=https://paper-api.alpaca.markets" >> $GITHUB_ENV
          echo "ALPACA_DATA_URL=https://data.alpaca.markets" >> $GITHUB_ENV

      - name: Inject secrets (Alpaca)
        env:
          ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
          ALPACA_API_SECRET: ${{ secrets.ALPACA_API_SECRET }}
        run: |
          if [ -z "$ALPACA_API_KEY" ] || [ -z "$ALPACA_API_SECRET" ]; then
            echo "Missing ALPACA secrets; ensure repo secrets are set. For paper runs DRY_RUN must be true." && exit 1
          fi
          echo "ALPACA_API_KEY=$ALPACA_API_KEY" >> $GITHUB_ENV
          echo "ALPACA_API_SECRET=$ALPACA_API_SECRET" >> $GITHUB_ENV

      - name: Sanity check broker ping (paper)
        run: |
          python - << 'PY'
          import os
          from trader.broker_alpaca import AlpacaEquitiesBroker
          dry = os.getenv('DRY_RUN','true').lower()=='true'
          b = AlpacaEquitiesBroker(dry_run=dry)
          print('DRY_RUN =', dry)
          print('Ping =', b.ping())
          print('Cash =', b.get_cash())
          print('AAPL px =', b.get_latest_price('AAPL'))
          PY

      - name: Run trader
        env:
          PYTHONUNBUFFERED: '1'
        run: |
          set -e
          echo "=== ENV ==="; env | sort
          echo "=== START MAIN ==="
          if [ -f "main.py" ]; then
            python main.py --asset equities --broker alpaca || python main.py
          elif [ -f "trader/main.py" ]; then
            python trader/main.py --asset equities --broker alpaca || python trader/main.py
          else
            echo "No main.py found. Please update the run step to your entry point."; exit 2
          fi

      - name: Mark success
        if: ${{ success() }}
        run: echo 'Equities (Alpaca — PAPER) run completed.'
