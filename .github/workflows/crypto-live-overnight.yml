name: Crypto Live - Overnight (15m DRY-RUN by default)

on:
  workflow_dispatch:
    inputs:
      DRY_RUN_INPUT:
        description: 'ON for simulation, OFF for live trading'
        required: true
        default: 'ON'

jobs:
  run:
    runs-on: ubuntu-latest

    # UI input overrides repo vars; safe default = ON
    env:
      EXCHANGE: ${{ vars.EXCHANGE || 'kraken' }}
      RUN_SWITCH: ${{ vars.RUN_SWITCH || 'ON' }}
      DRY_RUN: ${{ github.event.inputs.DRY_RUN_INPUT || vars.DRY_RUN || 'ON' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install ccxt pandas numpy pyyaml matplotlib
          fi

      - name: Restore state cache (rolling)
        uses: actions/cache@v4
        with:
          path: .state
          key: state-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            state-${{ runner.os }}-

      - name: Ensure .state exists
        run: mkdir -p .state

      - name: "Warm snapshots (skip: safe_runner removed)"
        run: echo "Skipping warm-up: safe_runner.py not found"

      - name: Run trading loop
        env:
          KRAKEN_API_KEY: ${{ secrets.KRAKEN_API_KEY }}
          KRAKEN_API_SECRET: ${{ secrets.KRAKEN_API_SECRET }}
        run: |
          echo "==== MODE CHECK ===="
          echo "EXCHANGE=${EXCHANGE}"
          echo "RUN_SWITCH=${RUN_SWITCH}"
          echo "DRY_RUN=${DRY_RUN}"
          echo "===================="
          python main.py

      - name: Debug .state contents (after run)
        if: always()
        run: |
          echo "== .state listing =="
          ls -la .state || true
          echo "== buy_plan.json =="
          test -f .state/buy_plan.json && cat .state/buy_plan.json || echo "(missing)"
          echo "== spike_candidates.json =="
          test -f .state/spike_candidates.json && head -200 .state/spike_candidates.json || echo "(missing)"

      - name: Upload .state as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: state
          path: .state/**
          if-no-files-found: warn
