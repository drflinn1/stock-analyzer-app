name: Crypto Live (Every 15 min)

on:
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes
  workflow_dispatch:         # allow manual runs from Actions tab

concurrency:
  group: crypto-live
  cancel-in-progress: true

env:
  # --- Runtime ---
  PYTHON_VERSION: "3.11"

  # --- Stop-loss knobs ---
  STOP_LOSS_PCT: "2.0"
  STOP_LOSS_USE_LIMIT: "true"
  STOP_LOSS_LIMIT_OFFSET_BP: "10"

  # --- Live knobs ---
  DRY_RUN: "false"
  SKIP_BALANCE_PING: "false"      # IMPORTANT: check free USD before placing orders
  TRADE_AMOUNT: "20"              # nominal per buy (USD)
  AUTO_TOP_UP_MIN: "true"         # bump to pair's exchange minimum if needed
  MIN_ORDER_BUFFER_USD: "0.50"    # cushion for fees/rounding so Kraken doesnâ€™t reject
  DAILY_CAP: "50"
  DAILY_CAP_TZ: "America/Los_Angeles"

  # --- Selection / universe ---
  DROP_PCT: "2.0"
  UNIVERSE_SIZE: "100"
  PREFERRED_QUOTES: "USD,USDT"
  MIN_DOLLAR_VOL_24H: "500000"
  MIN_PRICE: "0.01"

  # --- Filters ---
  EXCLUDE: "U/USD"
  WHITELIST: ""

jobs:
  run:
    name: Run trader (Kraken)
    runs-on: ubuntu-latest
    permissions: {}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # make sure ccxt is there (some lockfiles omit it)
          pip install ccxt

      - name: Echo live env
        run: |
          echo "DRY_RUN=${DRY_RUN}"
          echo "SKIP_BALANCE_PING=${SKIP_BALANCE_PING}"
          echo "TRADE_AMOUNT=${TRADE_AMOUNT}"
          echo "AUTO_TOP_UP_MIN=${AUTO_TOP_UP_MIN}"
          echo "MIN_ORDER_BUFFER_USD=${MIN_ORDER_BUFFER_USD}"
          echo "DAILY_CAP=${DAILY_CAP}"
          echo "DAILY_CAP_TZ=${DAILY_CAP_TZ}"

      - name: Run trader
        env:
          KRAKEN_API_KEY: ${{ secrets.KRAKEN_API_KEY }}
          KRAKEN_SECRET: ${{ secrets.KRAKEN_API_SECRET }}
        run: |
          python -V
          python main.py
