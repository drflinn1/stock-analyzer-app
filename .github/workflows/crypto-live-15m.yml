name: Crypto Live (Every 15 min)

on:
  workflow_dispatch:
  # Enable the schedule after you confirm manual runs are green.
  # schedule:
  #   - cron: "*/15 * * * *"

concurrency:
  group: crypto-live
  cancel-in-progress: true

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.11"

  # ------- REQUIRED: these must exist in repo Settings → Secrets → Actions -------
  KRAKEN_API_KEY: ${{ secrets.KRAKEN_API_KEY }}
  KRAKEN_API_SECRET: ${{ secrets.KRAKEN_API_SECRET }}

  # ------- SAFE STARTER SETTINGS -------
  DRY_RUN: "false"            # we’re testing live connection (no buys due to MAX_TRADES_PER_RUN=0)
  TRADE_AMOUNT: "10"          # raise later if min-notional blocks a pair
  TAKE_PROFIT_PCT: "0.02"     # +2% take-profit
  DROP_PCT: "0.00"            # disable dip gate for the first test/fill
  MAX_TRADES_PER_RUN: "0"     # <<< credentials/balance test only (no orders)
  MIN_NOTIONAL_BUFFER: "1.00"
  SYMBOLS: "BTC/USD,ETH/USD"

jobs:
  live:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install ccxt
          fi

      - name: Echo live env
        run: |
          echo "DRY_RUN=${DRY_RUN}"
          echo "TRADE_AMOUNT=${TRADE_AMOUNT}"
          echo "TAKE_PROFIT_PCT=${TAKE_PROFIT_PCT}"
          echo "DROP_PCT=${DROP_PCT}"
          echo "MAX_TRADES_PER_RUN=${MAX_TRADES_PER_RUN}"
          echo "SYMBOLS=${SYMBOLS}"
          echo "Secrets present: KRAKEN_API_KEY=$([ -n "${KRAKEN_API_KEY}" ] && echo set || echo missing), KRAKEN_API_SECRET=$([ -n "${KRAKEN_API_SECRET}" ] && echo set || echo missing)"

      - name: Run trader
        run: |
          set -e
          python -V
          if [ -f "main.py" ]; then
            python main.py
          elif [ -f "stock-analyzer-app/main.py" ]; then
            python stock-analyzer-app/main.py
          else
            echo "main.py not found at repo root or stock-analyzer-app/main.py"
            exit 1
          fi
