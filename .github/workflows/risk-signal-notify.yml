name: Risk Signal — Daily Notifier

on:
  schedule:
    # 14:00 UTC ≈ 7:00 AM PT
    - cron: "0 14 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  notify:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install ccxt

      - name: Banner (for logs)
        env:
          EXCHANGE_ID: kraken
        run: |
          python -m trader.risk_signal

      - name: Detect flip + write state
        id: flip
        shell: bash
        run: |
          python - << 'PY'
          from pathlib import Path
          from trader.risk_signal import risk_signal
          state = Path(".state/last_risk_signal.txt")
          state.parent.mkdir(parents=True, exist_ok=True)

          signal, _ = risk_signal()
          prev = state.read_text().strip() if state.exists() else "UNKNOWN"
          flipped = (prev != signal)
          state.write_text(signal)

          Path(".state/.flip_marker").write_text(f"{prev}->{signal}" if flipped else "")
          PY

          if [ -s ".state/.flip_marker" ]; then
            echo "flip=true" >> "$GITHUB_OUTPUT"
            echo "flip_message=$(cat .state/.flip_marker)" >> "$GITHUB_OUTPUT"
          else
            echo "flip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit last signal (on flip)
        if: steps.flip.outputs.flip == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add .state/last_risk_signal.txt
          git commit -m "Risk Signal flip: ${{ steps.flip.outputs.flip_message }}"
          git push

      # FIXED: correct GitHub expression (no stray braces/spaces)
      - name: Send email via failure (on flip)
        if: steps.flip.outputs.flip == 'true'
        shell: bash
        run: |
          echo "::error::Risk Signal FLIP ${{ steps.flip.outputs.flip_message }}"
          exit 1

      - name: No flip (success)
        if: steps.flip.outputs.flip != 'true'
        run: echo "No flip detected."
