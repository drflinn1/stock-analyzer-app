name: Risk Signal Notifier

on:
  workflow_dispatch:
  schedule:
    # Daily at 15:00 UTC (08:00 AM PT by default)
    - cron: "0 15 * * *"

permissions:
  contents: read

concurrency:
  group: risk-signal-notify-${{ github.ref }}
  cancel-in-progress: true

jobs:
  notify:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run notifier
        shell: bash
        run: |
          set -e
          mkdir -p .state
          cat > _notify.py <<'PY'
import os, json, pathlib, sys, random

p = pathlib.Path(".state"); p.mkdir(parents=True, exist_ok=True)
last_file = p / "last_risk_signal.txt"

# Simple placeholder risk metric (replace with your real one if present)
signal = "ON" if (random.random() > 0.5) else "OFF"

prev = last_file.read_text().strip() if last_file.exists() else ""
flip = (prev != "") and (prev != signal)
last_file.write_text(signal)

print(f"RISK SIGNAL: {signal}")
if flip:
    print(f"Flip detected: {prev} -> {signal}")
    # Fail on purpose so GitHub emails you on flips
    sys.exit(42)
else:
    print("No flip detected.")
PY
          python _notify.py
