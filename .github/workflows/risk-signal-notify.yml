# .github/workflows/risk-signal-notify.yml
name: Risk Signal Notifier

on:
  schedule:
    # 14:00 UTC (≈ 7:00 AM PT). Change this to taste.
    - cron: "0 14 * * *"
  workflow_dispatch: {}

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read current signal + prior
        id: read
        run: |
          set -euo pipefail
          CUR=$(cat .state/risk_signal.txt 2>/dev/null || echo "UNKNOWN")
          PREV=$(cat .state/last_risk_signal.txt 2>/dev/null || echo "UNKNOWN")
          echo "current=$CUR" >> $GITHUB_OUTPUT
          echo "previous=$PREV" >> $GITHUB_OUTPUT
          echo "RISK SIGNAL: $CUR (prev: $PREV)"

      - name: Decide flip
        id: flip
        run: |
          set -euo pipefail
          if [ "${{ steps.read.outputs.current }}" != "${{ steps.read.outputs.previous }}" ]; then
            echo "flip=true" >> $GITHUB_OUTPUT
          else
            echo "flip=false" >> $GITHUB_OUTPUT
          fi

      - name: Store last signal
        run: |
          mkdir -p .state
          echo "${{ steps.read.outputs.current }}" > .state/last_risk_signal.txt
          git config user.email "actions@users.noreply.github.com"
          git config user.name  "github-actions"
          git add .state/last_risk_signal.txt
          git commit -m "chore: update last_risk_signal.txt to ${{ steps.read.outputs.current }}" || echo "No changes"
          # No push — this job is read-mostly; commit just anchors the file in the run logs.

      - name: Print banner
        run: |
          echo "=============================="
          echo " RISK SIGNAL: ${{ steps.read.outputs.current }}"
          echo " Prev:        ${{ steps.read.outputs.previous }}"
          echo "=============================="

      # Intentionally fail on flip so you get a GitHub email
      - name: Flip notifier (fail-on-purpose to email you)
        if: steps.flip.outputs.flip == 'true'
        run: |
          echo "Risk signal FLIPPED: ${{ steps.read.outputs.previous }} → ${{ steps.read.outputs.current }}"
          exit 1

      - name: No flip detected
        if: steps.flip.outputs.flip != 'true'
        run: echo "No flip detected — success."
