name: Risk Signal Notifier

on:
  schedule:
    - cron: "0 14 * * *"   # 14:00 UTC daily
  workflow_dispatch: {}

jobs:
  notify:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Read current signal
        id: now
        run: |
          CURR="OFF"
          if [ -f ".state/risk_signal.txt" ]; then
            RAW=$(tr -d '\r' < .state/risk_signal.txt | tr '[:lower:]' '[:upper:]')
            if [ "$RAW" = "ON" ] || [ "$RAW" = "OFF" ]; then
              CURR="$RAW"
            fi
          fi
          echo "curr=$CURR" >> "$GITHUB_OUTPUT"

      - name: Compare to last value
        id: cmp
        run: |
          LAST="UNKNOWN"
          if [ -f ".state/last_risk_signal.txt" ]; then
            LAST=$(tr -d '\r' < .state/last_risk_signal.txt)
          fi
          echo "last=$LAST" >> "$GITHUB_OUTPUT"
          printf "%s" "${{ steps.now.outputs.curr }}" > .state/last_risk_signal.txt

      - name: Slack alert on flip (color card)
        if: ${{ env.SLACK_WEBHOOK_URL != '' && steps.cmp.outputs.last != 'UNKNOWN' && steps.cmp.outputs.last != steps.now.outputs.curr }}
        run: |
          COLOR="#2eb886"; ICON="ðŸŸ¢"
          if [ "${{ steps.now.outputs.curr }}" = "OFF" ]; then
            COLOR="#e01e5a"; ICON="ðŸ”´"
          fi
          LAST='${{ steps.cmp.outputs.last }}'
          CURR='${{ steps.now.outputs.curr }}'
          TS=$(date +%s)

          cat > payload.json <<EOF
          {
            "attachments": [
              {
                "color": "$COLOR",
                "title": "$ICON Risk flip",
                "fields": [
                  { "title": "From", "value": "$LAST", "short": true },
                  { "title": "To",   "value": "$CURR", "short": true }
                ],
                "ts": $TS
              }
            ]
          }
          EOF

          curl -s -X POST -H 'Content-type: application/json' \
            --data @payload.json \
            "${SLACK_WEBHOOK_URL}" >/dev/null

      - name: Save last value (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: risk-state
          path: .state/last_risk_signal.txt
