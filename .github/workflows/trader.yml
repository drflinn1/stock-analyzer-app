name: headless-trader

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Run in dry-run mode? (true/false)"
        required: true
        default: "true"
      symbols:
        description: "Comma-separated symbols"
        required: true
        default: "AAPL,MSFT,BTC-USD"
      start:
        description: "Start date (YYYY-MM-DD)"
        required: true
        default: "2023-01-01"
      end:
        description: "End date (YYYY-MM-DD, empty = today)"
        required: false
        default: ""
      equity_dollars:
        description: "EQUITY dollars per trade (override)"
        required: false
        default: "1"
      crypto_dollars:
        description: "CRYPTO dollars per trade (override)"
        required: false
        default: "1"
  schedule:
    # 13:35 UTC ≈ 9:35 AM ET  (Mon–Fri)
    - cron: "35 13 * * 1-5"
    # 19:50 UTC ≈ 3:50 PM ET  (Mon–Fri)
    - cron: "50 19 * * 1-5"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Run trader (main.py)
        env:
          # --- Strategy window & control ---
          SYMBOLS: ${{ github.event.inputs.symbols || 'AAPL,MSFT,BTC-USD' }}
          START:   ${{ github.event.inputs.start   || '2023-01-01' }}
          END:     ${{ github.event.inputs.end     || '' }}
          DRY_RUN: ${{ github.event.inputs.dry_run || 'true' }}
          OUT_DIR: out

          # --- Order sizing (defaults for scheduled runs; can override in Run workflow) ---
          EQUITY_DOLLARS_PER_TRADE:  ${{ github.event.inputs.equity_dollars || '200' }}
          CRYPTO_DOLLARS_PER_TRADE:  ${{ github.event.inputs.crypto_dollars || '100' }}

          # --- Brokers (equity via Robinhood; crypto optional) ---
          EQUITY_BROKER: robinhood
          RH_USERNAME:     ${{ secrets.RH_USERNAME }}
          RH_PASSWORD:     ${{ secrets.RH_PASSWORD }}
          RH_TOTP_SECRET:  ${{ secrets.RH_TOTP_SECRET }}
          RH_DEVICE_TOKEN: ${{ secrets.RH_DEVICE_TOKEN }}

          CRYPTO_EXCHANGE:       ${{ vars.CRYPTO_EXCHANGE }}
          CRYPTO_API_KEY:        ${{ secrets.CRYPTO_API_KEY }}
          CRYPTO_API_SECRET:     ${{ secrets.CRYPTO_API_SECRET }}
          CRYPTO_API_PASSPHRASE: ${{ secrets.CRYPTO_API_PASSPHRASE }}
        run: |
          python main.py

      - name: List outputs (for diagnostics)
        run: |
          echo "Listing out/ (if it exists):"
          ls -lah out || true

      - name: Upload outputs
        uses: actions/upload-artifact@v4
        with:
          name: trade-outputs
          path: out/**
          if-no-files-found: warn
